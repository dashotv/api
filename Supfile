# Supfile for DashoTV AP
---
version: 0.4

networks:
    production:
        hosts:
            - shawn@kimon
env:
  # Environment variables for all commands
  NAME: dashotv
  REPO: github.com/dashotv/api
  BRANCH: master
  IMAGE: shawncatz/dashotv
  HOST_PORT: 9090
  CONTAINER_PORT: 9090

commands:
  # Named set of commands to be run remotely
  ping:
    desc: Print uname and current date/time.
    run: uname -a; date

  pre-build:
    desc: Initialize directory
    run: mkdir -p /tmp/$IMAGE

  mytest:
    run: echo $SUP_TIME

  build:
    desc: Build Docker image from current directory, push to Docker Hub
    # local: sup $SUP_ENV -f ./builder/Supfile $SUP_NETWORK build
    local: make docker && make docker-push
    once: true

  pull:
    desc: Pull latest Docker image
    run: sudo docker pull $IMAGE

#  config:
#    desc: Upload/test config file.
#    upload:
#      - src: ./example.$SUP_NETWORK.cfg
#        dst: /tmp/
#    run: test -f /tmp/example.$SUP_NETWORK.cfg

  stop:
    desc: Stop Docker container
    run: sudo docker stop $NAME || exit 0

  rm:
    desc: Remove Docker container
    run: sudo docker rm $NAME || exit 0

  start:
    desc: Start a stopped Docker container
    run: sudo docker start $NAME || exit 0

  run:
    desc: Run Docker container
    run: >
      sudo docker run -d \
        -p $HOST_PORT:$CONTAINER_PORT \
        --net=host \
        --restart=always \
        --name $NAME $IMAGE

  restart:
    desc: Restart Docker container
    run: sudo docker restart $NAME || exit 0

  stop-rm-run:
    desc: Rolling update (stop & remove old Docker container, run new one)
    run: >
      sudo docker stop $NAME || :; \
        sudo docker rm $NAME || :; \
        sudo docker run -d \
          -p $HOST_PORT:$CONTAINER_PORT \
          --net=host \
          --restart=always \
          --name $NAME $IMAGE
    serial: 1

  ps:
    desc: List running Docker containers
    run: sudo docker ps | grep $NAME

  logs:
    desc: Docker logs
    run: sudo docker logs $NAME

  tail-logs:
    desc: Tail Docker logs
    run: sudo docker logs --tail=20 -f $NAME

  health:
    desc: Application health check
    run: curl localhost:$HOST_PORT

#  slack-notify:
#    desc: Notify Slack about new deployment
#    local: >
#      curl -X POST --data-urlencode 'payload={"channel": "#_team_", "text": "['$SUP_NETWORK'] '$SUP_USER' deployed '$NAME'"}' \
#        https://hooks.slack.com/services/X/Y/Z

  bash:
    desc: Interactive shell on all hosts
    stdin: true
    run: bash

  exec:
    desc: Interactive docker exec on all hosts
    stdin: true
    run: sudo docker exec -i $NAME bash

targets: # Aliases to run multiple commands at once
  deploy:
#    - pre-build
    - build
    - pull
#    - config
    - stop-rm-run
#    - ps
    - health
    - logs
#    - slack-notify
